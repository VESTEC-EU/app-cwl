cwlVersion: v1.1
class: Workflow
requirements:
  SchemaDefRequirement:
    types:
    - $import: ipic-types.yml
inputs:
  SaveDirName:
    type: string?
    label: Directory for output. MUST be created prior to running the code!

  RestartDirName:
    type: string?
    label: Directories for restarts. MUST be created prior to running the code!

  NpMaxNpRatio:
    type: float?
    label: Set the maximum number of particles allocated initially

  Case:
    type: string

  PoissonCorrection:
    type: string

  WriteMethod:
    type: ipic-types.yml#write_methods

  SimulationName:
    type: string
    label: Simulation name for the output

  ParaviewScriptPath:
    type: string?
    label: Path to the python script generated by ParaView

  B0x:
    type: float?
    default: 0.0
  B0y:
    type: float?
    default: 0.0
  B0z:
    type: float?
    default: 0.0
  delta:
    type: float?
    label: Magnetic reconnection

  dt:
    type: float
    label: time step
  ncycles:
    type: int
    label: number of cycles
  th:
    type: float?
    label: decentering parameter
  c:
    type: float?
    label: light speed

  Smooth:
    type: float?
    label: Smoothing value (5-points stencil),1.0=no smoothing
  SmoothNiter:
    type: int?

  Lx:
    type: float?
    label: simulation box length - x direction
  Ly:
    type: float?
    label: simulation box length - y direction
  Lz:
    type: float?
    label: simulation box length - z direction

  nxc:
    type: int?
    label: number of cells - x direction
  nyc:
    type: int?
    label: number of cells - y direction
  nzc:
    type: int?
    label: number of cells - z direction

  XLEN:
    type: int
    label: number of MPI subdomains in x direction
    default: 1
  YLEN:
    type: int
    label: number of MPI subdomains in y direction
    default: 1
  ZLEN:
    type: int
    label: number of MPI subdomains in z direction
    default: 1

  PERIODICX:
    type: boolean?
    label: Use periodic in the x direction
  PERIODICY:
    type: boolean?
    label: Use periodic in the y direction
  PERIODICZ:
    type: boolean?
    label: Use periodic in the z direction

  ns:
    type: int
    label: number of species

  rhoINIT:
    type: float[]
    label: Initial density (make sure that plasma is neutral)

  rhoINJECT:
    type: float[]

  npcelx:
    type: int[]
    label: number of particles per cell - Direction X
  npcely:
    type: int[]
    label: number of particles per cell - Direction Y
  npcelz:
    type: int[]
    label: number of particles per cell - Direction Z


  qom:
    type: float[]
    label: charge to mass ratio for different species

  uth:
    type: float[]
    label: thermal velocity for different species - Direction X
  vth:
    type: float[]
    label: thermal velocity for different species - Direction Y
  wth:
    type: float[]
    label: thermal velocity for different species - Direction Z

  u0:
    type: float[]
    label: drift velocity   - Direction X
  v0:
    type: float[]
    label: drift velocity   - Direction Y
  w0:
    type: float[]
    label: drift velocity   - Direction Z


  bcPHIfaceXright:
    type: int?
    label: Electrostatic potential boundary condition (0,1 = Dirichilet, 2 = Neumann)
  bcPHIfaceXleft:
    type: int?
    label: Electrostatic potential boundary condition (0,1 = Dirichilet, 2 = Neumann)
  bcPHIfaceYright:
    type: int?
    label: Electrostatic potential boundary condition (0,1 = Dirichilet, 2 = Neumann)
  bcPHIfaceYleft:
    type: int?
    label: Electrostatic potential boundary condition (0,1 = Dirichilet, 2 = Neumann)
  bcPHIfaceZright:
    type: int?
    label: Electrostatic potential boundary condition (0,1 = Dirichilet, 2 = Neumann)
  bcPHIfaceZleft:
    type: int?
    label: Electrostatic potential boundary condition (0,1 = Dirichilet, 2 = Neumann)

  bcEMfaceXright:
    type: int
    label: EM field boundary condition (0 = perfect conductor, 1 = magnetic mirror)
  bcEMfaceXleft:
    type: int
    label: EM field boundary condition (0 = perfect conductor, 1 = magnetic mirror)
  bcEMfaceYright:
    type: int
    label: EM field boundary condition (0 = perfect conductor, 1 = magnetic mirror)
  bcEMfaceYleft:
    type: int
    label: EM field boundary condition (0 = perfect conductor, 1 = magnetic mirror)
  bcEMfaceZright:
    type: int
    label: EM field boundary condition (0 = perfect conductor, 1 = magnetic mirror)
  bcEMfaceZleft:
    type: int
    label: EM field boundary condition (0 = perfect conductor, 1 = magnetic mirror)

  bcPfaceXright:
    type: int?
    label: Particles Boundary condition (0 = exit, 1 = perfect mirror, 2 = riemission)
  bcPfaceXleft:
    type: int?
    label: Particles Boundary condition (0 = exit, 1 = perfect mirror, 2 = riemission)
  bcPfaceYright:
    type: int?
    label: Particles Boundary condition (0 = exit, 1 = perfect mirror, 2 = riemission)
  bcPfaceYleft:
    type: int?
    label: Particles Boundary condition (0 = exit, 1 = perfect mirror, 2 = riemission)
  bcPfaceZright:
    type: int?
    label: Particles Boundary condition (0 = exit, 1 = perfect mirror, 2 = riemission)
  bcPfaceZleft:
    type: int?
    label: Particles Boundary condition (0 = exit, 1 = perfect mirror, 2 = riemission)

  Vinj:
    type: float?
    label: velocity of the injection from the wall


  CGtol:
    type: float?
    label: CG solver stopping criterium tolerance
  GMREStol:
    type: float?
    label: GMRES solver stopping criterium tolerance
  NiterMover:
    type: int?
    label: mover predictor corrector iteration

  FieldOutputCycle:
    type: int?
    label: Output for field
  FieldOutputTag:
    type: string?
    label: Output for field
  MomentsOutputTag:
    type: string?

  ParticlesOutputCycle:
    type: int?
    label: Output for particles if null/0 it does not save particles data
  ParticlesOutputTag:
    type: string?

  DiagnosticsOutputCycle:
    type: int?
    label: Output for Diagnostic (null => same as FieldOutputCycle)

  RestartOutputCycle:
    type: int?

  CallFinalize:
    type: boolean?
steps:
  pre:
    run: ipic-input-gen.cwl
    in:
      SaveDirName: SaveDirName
      RestartDirName: RestartDirName
      NpMaxNpRatio: NpMaxNpRatio
      Case: Case
      PoissonCorrection: PoissonCorrection
      WriteMethod: WriteMethod
      SimulationName: SimulationName
      ParaviewScriptPath: ParaviewScriptPath
      B0x: B0x
      B0y: B0y
      B0z: B0z
      delta: delta
      dt: dt
      ncycles: ncycles
      th: th
      c: c
      Smooth: Smooth
      SmoothNiter: SmoothNiter
      Lx: Lx
      Ly: Ly
      Lz: Lz
      nxc: nxc
      nyc: nyc
      nzc: nzc
      XLEN: XLEN
      YLEN: YLEN
      ZLEN: ZLEN
      PERIODICX: PERIODICX
      PERIODICY: PERIODICY
      PERIODICZ: PERIODICZ
      ns: ns
      rhoINIT: rhoINIT
      rhoINJECT: rhoINJECT
      npcelx: npcelx
      npcely: npcely
      npcelz: npcelz
      qom: qom
      uth: uth
      vth: vth
      wth: wth
      u0: u0
      v0: v0
      w0: w0
      bcPHIfaceXright: bcPHIfaceXright
      bcPHIfaceXleft: bcPHIfaceXleft
      bcPHIfaceYright: bcPHIfaceYright
      bcPHIfaceYleft: bcPHIfaceYleft
      bcPHIfaceZright: bcPHIfaceZright
      bcPHIfaceZleft: bcPHIfaceZleft
      bcEMfaceXright: bcEMfaceXright
      bcEMfaceXleft: bcEMfaceXleft
      bcEMfaceYright: bcEMfaceYright
      bcEMfaceYleft: bcEMfaceYleft
      bcEMfaceZright: bcEMfaceZright
      bcEMfaceZleft: bcEMfaceZleft
      bcPfaceXright: bcPfaceXright
      bcPfaceXleft: bcPfaceXleft
      bcPfaceYright: bcPfaceYright
      bcPfaceYleft: bcPfaceYleft
      bcPfaceZright: bcPfaceZright
      bcPfaceZleft: bcPfaceZleft
      Vinj: Vinj
      CGtol: CGtol
      GMREStol: GMREStol
      NiterMover: NiterMover
      FieldOutputCycle: FieldOutputCycle
      FieldOutputTag: FieldOutputTag
      MomentsOutputTag: MomentsOutputTag
      ParticlesOutputCycle: ParticlesOutputCycle
      ParticlesOutputTag: ParticlesOutputTag
      DiagnosticsOutputCycle: DiagnosticsOutputCycle
      RestartOutputCycle: RestartOutputCycle
      CallFinalize: CallFinalize
    out:
    - nproc
    - inp_data
  main:
    run: ipic-solo.cwl
    in:
      nproc: pre/nproc
      inp_data: pre/inp_data
    out:
    - data
outputs:
  data:
    type: File[]
    outputSource: main/data
